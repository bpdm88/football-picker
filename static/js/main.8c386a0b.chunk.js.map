{"version":3,"sources":["assets/images/logo.svg","components/Header/Header.js","components/PlayerForm/FormField.js","components/PlayerForm/PlayerForm.js","components/PlayerForm/index.js","data/actions/state.js","components/PlayerList/PlayerList.js","components/PlayerList/index.js","components/Team/Team.js","components/Team/index.js","components/TeamNews/TeamNews.js","components/TeamNews/index.js","components/MatchDay/MatchDay.js","components/MatchDay/index.js","components/FinalScore/FinalScore.js","components/FinalScore/index.js","components/PostMatch/PostMatch.js","components/PostMatch/index.js","App.js","data/initial.js","data/Reducer/createPlayer.js","data/Reducer/createSquad.js","data/Reducer/createTeams.js","data/Reducer/createMatchInfo.js","data/Reducer/createScore.js","data/Reducer/reducer.js","data/store.js","index.js"],"names":["Header","className","style","color","src","logo","alt","FormField","name","label","type","handleChange","value","min","max","htmlFor","id","onChange","PlayerForm","props","state","playerName","attack","defence","creativity","handleChangePlayerName","bind","handleChangeAttack","handleChangeDefence","handleChangeCreativity","handleAutomate","handleSquad","handleSubmit","event","this","setState","currentTarget","preventDefault","handleAddPlayer","skill","Math","floor","random","autoAttack","autoDefence","autoCreativity","handleAddSquad","disabled","onSubmit","onClick","React","Component","connect","players","length","dispatch","data","add","PlayerList","class","map","player","Team","teamOne","teamTwo","handleChangeTeamName1","handleChangeTeamName2","handleGenerateTeams","listComplete","teamsSubmitted","generate","TeamNews","handleClick","handleMatchDay","team1","team2","teamName1","teamName2","MatchDay","handleKickOff","matchInfo","detail","FinalScore","team1Goals","team2Goals","PostMatch","reset","gameStarted","winner","motm","App","initial","createPlayer","action","createSquad","autoSquad","sort","slice","createTeams","newArr","array","shuffle","createMatchInfo","weather","stadium","referee","weatherInfo","stadiumInfo","refereeInfo","attack1","reduce","total","attack2","createScore","defence1","creativity1","defence2","creativity2","decrease","score","enhance","team1Score","round","team2Score","whoWon","reducer","Player","Squad","Teams","MatchInfo","Score","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","initialState","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c386a0b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4ab6ce34.svg\";","import logo from \"../../assets/images/logo.svg\";\n\nconst Header = () => {\n    return (\n        <header>\n            <h1 className=\"heading-alpha\">\n                Futbol <span style={{ color: \"var(--green)\" }}>5aside</span>\n            </h1>\n            <img src={logo} alt=\"5 a side logo\" />\n        </header>\n    );\n};\n\nexport default Header;\n","const FormField = ({\n    name,\n    label,\n    type,\n    handleChange,\n    value,\n    min,\n    max,\n    className,\n}) => {\n    return (\n        <div>\n            <label className={className} htmlFor={name}>\n                {label}\n            </label>\n            <input\n                className={className}\n                id={name}\n                type={type}\n                onChange={handleChange}\n                value={value}\n                min={min}\n                max={max}\n            />\n        </div>\n    );\n};\n\nexport default FormField;\n","import React from \"react\";\nimport FormField from \"./FormField\";\n\nclass PlayerForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerName: \"\",\n            attack: 2,\n            defence: 2,\n            creativity: 2,\n        };\n\n        this.handleChangePlayerName = this.handleChangePlayerName.bind(this);\n        this.handleChangeAttack = this.handleChangeAttack.bind(this);\n        this.handleChangeDefence = this.handleChangeDefence.bind(this);\n        this.handleChangeCreativity = this.handleChangeCreativity.bind(this);\n        this.handleAutomate = this.handleAutomate.bind(this);\n        this.handleSquad = this.handleSquad.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangePlayerName(event) {\n        this.setState({ playerName: event.currentTarget.value });\n    }\n\n    handleChangeAttack(event) {\n        this.setState({ attack: event.currentTarget.value });\n    }\n\n    handleChangeDefence(event) {\n        this.setState({ defence: event.currentTarget.value });\n    }\n\n    handleChangeCreativity(event) {\n        this.setState({ creativity: event.currentTarget.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.props.handleAddPlayer({ ...this.state });\n\n        this.setState({\n            playerName: \"\",\n            attack: 2,\n            defence: 2,\n            creativity: 2,\n        });\n    }\n\n    handleAutomate() {\n        let skill = (max) => Math.floor(Math.random() * Math.floor(max));\n\n        let autoAttack = skill(5);\n        let autoDefence = skill(5);\n        let autoCreativity = skill(5);\n\n        this.setState({ attack: autoAttack });\n        this.setState({ defence: autoDefence });\n        this.setState({ creativity: autoCreativity });\n    }\n\n    handleSquad() {\n        this.props.handleAddSquad();\n    }\n\n    render() {\n        let { playerName, attack, defence, creativity } = this.state;\n        let { disabled } = this.props;\n\n        return (\n            <section className=\"small-card\">\n                <h2 className=\"heading-bravo\">Create Players</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <FormField\n                        label=\"Name\"\n                        name=\"Name\"\n                        type=\"text\"\n                        handleChange={this.handleChangePlayerName}\n                        value={playerName}\n                        className=\"label-block\"\n                    />\n                    <div className=\"skill-container\">\n                        <FormField\n                            label=\"Attack Skill\"\n                            name=\"Attack-Skill\"\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"5\"\n                            handleChange={this.handleChangeAttack}\n                            value={attack}\n                        />\n                        <FormField\n                            label=\"Defence Skill\"\n                            name=\"Defence-Skill\"\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"5\"\n                            handleChange={this.handleChangeDefence}\n                            value={defence}\n                        />\n                        <FormField\n                            label=\"Creativity Skill\"\n                            name=\"Creativity-Skill\"\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"5\"\n                            handleChange={this.handleChangeCreativity}\n                            value={creativity}\n                        />\n                    </div>\n                    <div className=\"button-container\">\n                        <button disabled={disabled} className=\"primary-button\">\n                            Add Player\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={this.handleAutomate}\n                            className=\"primary-button\"\n                        >\n                            Auto Skill\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={this.handleSquad}\n                            className=\"secondary-button\"\n                        >\n                            Auto Squad\n                        </button>\n                    </div>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default PlayerForm;\n","import { connect } from \"react-redux\";\nimport PlayerForm from \"./PlayerForm\";\nimport { add, getSquad } from \"../../data/actions/state\";\n\nlet mapStateToProps = (state) => {\n    return {\n        disabled: state.players.length >= 10,\n    };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        handleAddPlayer: (data) => dispatch(add(data)),\n        handleAddSquad: () => dispatch(getSquad()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerForm);\n","export const add = (data) => {\n    return {\n        type: \"ADD_PLAYER\",\n        playerName: data.playerName,\n        attack: data.attack,\n        defence: data.defence,\n        creativity: data.creativity,\n    };\n};\n\nexport const getSquad = () => {\n    return {\n        type: \"ADD_SQUAD\",\n    };\n};\n\nexport const generate = (data) => {\n    return {\n        type: \"GENERATE_TEAMS\",\n        teamOne: data.teamOne,\n        teamTwo: data.teamTwo,\n    };\n};\n\nexport const getInfo = () => {\n    return {\n        type: \"MATCHDAY_INFO\",\n    };\n};\n\nexport const getResult = () => {\n    return {\n        type: \"GET_RESULT\",\n    };\n};\n\nexport const resetGame = () => {\n    return {\n        type: \"RESET\",\n    };\n};\n","const PlayerList = ({ players }) => {\n    return (\n        <section className=\"large-card\">\n            <h2 className=\"heading-bravo\">Available Squad</h2>\n            <div class=\"abilities\">\n                <h3 className=\"heading-charlie\">Player</h3>\n                <div className=\"scores\">\n                    <h3 className=\"heading-charlie\">Attack</h3>\n                    <h3 className=\"heading-charlie\">Defend</h3>\n                    <h3 className=\"heading-charlie\">Creativity</h3>\n                </div>\n            </div>\n            <ul>\n                {players.map((player) => (\n                    <li key={player.id}>\n                        <div class=\"abilities\">\n                            <span className=\"heading-charlie\">\n                                {player.name}\n                            </span>\n                            <div className=\"scores\">\n                                <span className=\"heading-charlie\">\n                                    {player.attack}\n                                </span>\n                                <span className=\"heading-charlie\">\n                                    {player.defence}\n                                </span>\n                                <span className=\"heading-charlie\">\n                                    {player.creativity}\n                                </span>\n                            </div>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nexport default PlayerList;\n","import { connect } from \"react-redux\";\nimport PlayerList from \"./PlayerList\";\n\nlet mapStateToProps = (state) => {\n    return {\n        players: state.players,\n    };\n};\n\nexport default connect(mapStateToProps)(PlayerList);\n","import React from \"react\";\nimport FormField from \"../PlayerForm/FormField\";\n\nclass Team extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teamOne: \"\",\n            teamTwo: \"\",\n        };\n\n        this.handleChangeTeamName1 = this.handleChangeTeamName1.bind(this);\n        this.handleChangeTeamName2 = this.handleChangeTeamName2.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangeTeamName1(event) {\n        this.setState({ teamOne: event.currentTarget.value });\n    }\n\n    handleChangeTeamName2(event) {\n        this.setState({ teamTwo: event.currentTarget.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.props.handleGenerateTeams({ ...this.state });\n\n        this.setState({ teamOne: \"\", teamTwo: \"\" });\n    }\n\n    render() {\n        let { teamOne, teamTwo } = this.state;\n        let { disabled, listComplete } = this.props;\n\n        return (\n            <section className=\"small-card\">\n                <h2 className=\"heading-bravo\">Create Teams</h2>\n                {!listComplete ? null : (\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"content\">\n                            <FormField\n                                label=\"Team Name 1:\"\n                                name=\"team-name\"\n                                type=\"text\"\n                                handleChange={this.handleChangeTeamName1}\n                                value={teamOne}\n                                className=\"label-block\"\n                            />\n                            <FormField\n                                label=\"Team Name 2:\"\n                                name=\"team-name\"\n                                type=\"text\"\n                                handleChange={this.handleChangeTeamName2}\n                                value={teamTwo}\n                                className=\"label-block\"\n                            />\n                        </div>\n                        <button disabled={disabled} className=\"primary-button\">\n                            Add Teams\n                        </button>\n                    </form>\n                )}\n            </section>\n        );\n    }\n}\n\nexport default Team;\n","import { connect } from \"react-redux\";\nimport Team from \"./Team\";\nimport { generate } from \"../../data/actions/state\";\n\nlet mapStateToProps = (state) => {\n    return {\n        disabled: state.teamsSubmitted,\n        listComplete: state.listComplete,\n    };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        handleGenerateTeams: (data) => dispatch(generate(data)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Team);\n","import React from \"react\";\n\nclass TeamNews extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleMatchDay();\n    }\n\n    render() {\n        let { team1, team2, teamName1, teamName2, teamsSubmitted } = this.props;\n\n        return (\n            <section className=\"small-card\">\n                <h2 className=\"heading-bravo\">Team News</h2>\n                {!teamsSubmitted ? null : (\n                    <>\n                        {\" \"}\n                        <div className=\"content\">\n                            <div className=\"teams\">\n                                <h3 className=\"heading-delta\">{teamName1}</h3>\n                                <h3 className=\"heading-delta\">{teamName2}</h3>\n                            </div>\n                            <div className=\"line-ups\">\n                                <ul>\n                                    {team1.map((player) => (\n                                        <li key={player.id}>{player.name}</li>\n                                    ))}\n                                </ul>\n                                <ul>\n                                    {team2.map((player) => (\n                                        <li key={player.id}>{player.name}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                        <button\n                            onClick={this.handleClick}\n                            className=\"primary-button\"\n                        >\n                            Match Info\n                        </button>{\" \"}\n                    </>\n                )}\n            </section>\n        );\n    }\n}\n\nexport default TeamNews;\n","import { connect } from \"react-redux\";\nimport TeamNews from \"./TeamNews\";\nimport { getInfo } from \"../../data/actions/state\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team1: state.team1,\n        team2: state.team2,\n        teamName1: state.teamName1,\n        teamName2: state.teamName2,\n        teamsSubmitted: state.teamsSubmitted,\n    };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        handleMatchDay: () => dispatch(getInfo()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamNews);\n","import React from \"react\";\n\nclass MatchDay extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.handleKickOff();\n    }\n\n    render() {\n        let { matchInfo, teamsSubmitted } = this.props;\n        return (\n            <section className=\"small-card\">\n                <h2 className=\"heading-bravo\">Match Day Information</h2>\n                {!teamsSubmitted ? null : (\n                    <>\n                        {\" \"}\n                        <div className=\"content\">\n                            <ul>\n                                {matchInfo.map((detail) => (\n                                    <li key={detail.id}>{detail}</li>\n                                ))}\n                            </ul>\n                        </div>\n                        <button\n                            onClick={this.handleClick}\n                            className=\"primary-button\"\n                        >\n                            Kick Off\n                        </button>{\" \"}\n                    </>\n                )}\n            </section>\n        );\n    }\n}\n\nexport default MatchDay;\n","import { connect } from \"react-redux\";\nimport MatchDay from \"./MatchDay\";\nimport { getResult } from \"../../data/actions/state\";\n\nlet mapStateToProps = (state) => {\n    return {\n        matchInfo: state.matchInfo,\n        teamsSubmitted: state.teamsSubmitted,\n    };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        handleKickOff: () => dispatch(getResult()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchDay);\n","const FinalScore = ({ teamName1, teamName2, team1Goals, team2Goals }) => {\n    return (\n        <section className=\"small-card\">\n            <h2 className=\"heading-bravo\">Final Score</h2>\n            <div className=\"content\">\n                <h1 className=\"heading-echo\">\n                    {teamName1}\n                    <span className=\"goals\">{team1Goals}</span>\n                </h1>\n                <h1 className=\"heading-echo\">\n                    {teamName2}\n                    <span className=\"goals\">{team2Goals}</span>\n                </h1>\n            </div>\n        </section>\n    );\n};\n\nexport default FinalScore;\n","import { connect } from \"react-redux\";\nimport FinalScore from \"./FinalScore\";\n\nlet mapStateToProps = (state) => {\n    return {\n        teamName1: state.teamName1,\n        teamName2: state.teamName2,\n        team1Goals: state.team1Goals,\n        team2Goals: state.team2Goals,\n    };\n};\n\nexport default connect(mapStateToProps)(FinalScore);\n","import React from \"react\";\n\nclass PostMatch extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.reset();\n    }\n\n    render() {\n        let { gameStarted, winner, motm } = this.props;\n\n        return (\n            <section className=\"small-card\">\n                <h2 className=\"heading-bravo\">Post Match Report</h2>\n                <div className=\"content\">\n                    {!gameStarted ? null : (\n                        <ul>\n                            <li>\n                                Man of the Match:{\" \"}\n                                <span style={{ color: \"var(--green)\" }}>\n                                    {motm}\n                                </span>\n                            </li>\n                            <li>\n                                An entertaining game between the two sides saw{\" \"}\n                                {winner === \"draw\"\n                                    ? \"a competitive draw\"\n                                    : `${winner} get the win today`}\n                            </li>\n                            <li>Click the reset button to start again</li>\n                        </ul>\n                    )}\n                </div>\n                <button onClick={this.handleClick} className=\"secondary-button\">\n                    Reset\n                </button>\n            </section>\n        );\n    }\n}\n\nexport default PostMatch;\n","import { connect } from \"react-redux\";\nimport PostMatch from \"./PostMatch\";\nimport { resetGame } from \"../../data/actions/state\";\n\nlet mapStateToProps = (state) => {\n    return {\n        gameStarted: state.gameStarted,\n        winner: state.winner,\n        motm: state.motm,\n    };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        reset: () => dispatch(resetGame()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostMatch);\n","import \"./styles/index.css\";\nimport Header from \"./components/Header/Header\";\nimport PlayerForm from \"./components/PlayerForm\";\nimport PlayerList from \"./components/PlayerList\";\nimport Team from \"./components/Team\";\nimport TeamNews from \"./components/TeamNews\";\nimport MatchDay from \"./components/MatchDay\";\nimport FinalScore from \"./components/FinalScore\";\nimport PostMatch from \"./components/PostMatch\";\n\nconst App = () => {\n    return (\n        <>\n            <Header />\n            <PlayerForm />\n            <PlayerList />\n            <Team />\n            <TeamNews />\n            <MatchDay />\n            <FinalScore />\n            <PostMatch />\n        </>\n    );\n};\n\nexport default App;\n","const initial = {\n    players: [],\n    listComplete: false,\n    team1: [],\n    team2: [],\n    teamName1: \"\",\n    teamName2: \"\",\n    teamsSubmitted: false,\n    matchInfo: [],\n    gameStarted: false,\n    team1Goals: \"\",\n    team2Goals: \"\",\n    winner: \"\",\n    motm: \"\",\n};\n\nexport default initial;\n","const createPlayer = (state, action) => ({\n    ...state,\n    players: [\n        ...state.players,\n        {\n            name: action.playerName,\n            attack: action.attack,\n            defence: action.defence,\n            creativity: action.creativity,\n        },\n    ],\n    listComplete: state.players.length === 9,\n});\n\nexport default createPlayer;\n","const createSquad = (state) => {\n    const players = [\n        { name: \"Alan Shearer\", attack: 5, defence: 2, creativity: 3 },\n        { name: \"Wayne Rooney\", attack: 4, defence: 2, creativity: 4 },\n        { name: \"Roberto Carlos\", attack: 3, defence: 4, creativity: 3 },\n        { name: \"Luis Figo\", attack: 4, defence: 2, creativity: 4 },\n        { name: \"Paul Gascoigne\", attack: 3, defence: 2, creativity: 5 },\n        { name: \"Rivaldo\", attack: 4, defence: 1, creativity: 5 },\n        { name: \"Thierry Henry\", attack: 5, defence: 2, creativity: 3 },\n        { name: \"Gianluca Vialli\", attack: 4, defence: 0, creativity: 2 },\n        { name: \"Marcel Desailly\", attack: 2, defence: 5, creativity: 0 },\n        { name: \"Zinedine Zidane\", attack: 3, defence: 3, creativity: 5 },\n        { name: \"David Ginola\", attack: 3, defence: 3, creativity: 3 },\n        { name: \"Frank Lampard\", attack: 3, defence: 3, creativity: 3 },\n        { name: \"Sergio Ramos\", attack: 1, defence: 5, creativity: 2 },\n        { name: \"John Terry\", attack: 2, defence: 4, creativity: 0 },\n        { name: \"Paolo Maldini\", attack: 2, defence: 5, creativity: 2 },\n        { name: \"Gary Neville\", attack: 1, defence: 5, creativity: 1 },\n        { name: \"Roy Keane\", attack: 2, defence: 3, creativity: 3 },\n        { name: \"Andrea Pirlo\", attack: 2, defence: 2, creativity: 5 },\n        { name: \"Peter Crouch\", attack: 3, defence: 1, creativity: 0 },\n        { name: \"Paul Pogba\", attack: 2, defence: 2, creativity: 2 },\n        { name: \"Mo Salah\", attack: 4, defence: 1, creativity: 2 },\n        { name: \"Patrick kluivert\", attack: 4, defence: 0, creativity: 2 },\n        { name: \"Rio Ferdinand\", attack: 0, defence: 5, creativity: 1 },\n        { name: \"Thomas Muller\", attack: 5, defence: 2, creativity: 2 },\n        { name: \"Freddy Adu\", attack: 1, defence: 0, creativity: 2 },\n        { name: \"Mario Balotelli\", attack: 2, defence: 0, creativity: 2 },\n        { name: \"Gareth Bale\", attack: 3, defence: 1, creativity: 3 },\n        { name: \"David Luiz\", attack: 0, defence: 2, creativity: 0 },\n        { name: \"Nicolas Anelka\", attack: 4, defence: 0, creativity: 0 },\n        { name: \"Lionel Messi\", attack: 5, defence: 3, creativity: 5 },\n    ];\n\n    const shuffle = (array) => array.sort(() => 0.5 - Math.random());\n\n    let newArr = shuffle(players);\n\n    let autoSquad = newArr.slice(0, 10);\n\n    return {\n        ...state,\n        players: autoSquad,\n        listComplete: true,\n    };\n};\n\nexport default createSquad;\n","const createTeams = (state, action) => {\n    let array = state.players;\n\n    const shuffle = (array) => array.sort(() => 0.5 - Math.random());\n\n    let newArr = shuffle(array);\n\n    let team1 = newArr.slice(0, 5);\n    let team2 = newArr.slice(5, 10);\n\n    return {\n        ...state,\n        team1: team1,\n        team2: team2,\n        teamName1: action.teamOne,\n        teamName2: action.teamTwo,\n        teamsSubmitted: true,\n    };\n};\n\nexport default createTeams;\n","const createMatchInfo = (state) => {\n    const weather = [\n        \"Weather: Sunny\",\n        \"Weather: Rain\",\n        \"Weather: Overcast\",\n        \"Weather: Thunderstorms\",\n        \"Weather: Cloudy\",\n        \"Weather: Heavy Rain\",\n    ];\n\n    const stadium = [\n        \"Stadium: Wembly\",\n        \"Stadium: Old Trafford\",\n        \"Stadium: St James' Park\",\n        \"Stadium: Stamford Bridge\",\n        \"Stadium: Ashton Gate\",\n        \"Stadium: White Hart Lane\",\n    ];\n\n    const referee = [\n        \"Referee: Howard Webb\",\n        \"Referee: Graham Poll\",\n        \"Referee: Mark Clattenburg\",\n        \"Referee: Mike Dean\",\n        \"Referee: Andre Marriner\",\n        \"Referee: Pierluigi Collina\",\n    ];\n\n    const weatherInfo = weather[Math.floor(Math.random() * weather.length)];\n    const stadiumInfo = stadium[Math.floor(Math.random() * stadium.length)];\n    const refereeInfo = referee[Math.floor(Math.random() * referee.length)];\n\n    // betting favs\n\n    let team1 = state.team1;\n    let team2 = state.team2;\n    let teamName1 = state.teamName1;\n    let teamName2 = state.teamName2;\n\n    let attack1 = team1.reduce((total, player) => total + +player.attack, 0);\n    let attack2 = team2.reduce((total, player) => total + +player.attack, 0);\n\n    let fav = () => {\n        if (attack1 > attack2) {\n            return `SkyBet: ${teamName1} are the favourites coming in the matchup`;\n        } else if (attack2 > attack1) {\n            return `SkyBet: ${teamName2} are the favourites coming in the matchup`;\n        } else return \"SkyBet: The game is too close to call opt for a draw\";\n    };\n\n    const matchInfo = [weatherInfo, stadiumInfo, refereeInfo, fav()];\n\n    return {\n        ...state,\n        matchInfo: matchInfo,\n    };\n};\n\nexport default createMatchInfo;\n","const createScore = (state) => {\n    // To calculate the score:\n    // Each teams abilites (Attack, Defence, Creativity) is totaled then divided by 5.\n    // The defence score is then halved & an additonal enhancement is calculated depending on how high the teams creativity is.\n    // The number of goals scored is calculated by adding the attack score to the creativity enhancement less the other teams defence score.\n\n    // Ability Scores\n\n    let team1 = state.team1;\n    let team2 = state.team2;\n\n    let attack1 =\n        team1.reduce((total, player) => total + +player.attack, 0) / 5;\n    let defence1 =\n        team1.reduce((total, player) => total + +player.defence, 0) / 5;\n    let creativity1 =\n        team1.reduce((total, player) => total + +player.creativity, 0) / 5;\n\n    let attack2 =\n        team2.reduce((total, player) => total + +player.attack, 0) / 5;\n    let defence2 =\n        team2.reduce((total, player) => total + +player.defence, 0) / 5;\n    let creativity2 =\n        team2.reduce((total, player) => total + +player.creativity, 0) / 5;\n\n    // Decrease Defense Score\n\n    let decrease = (score) => score / 2;\n\n    // Creativity Enhancement\n\n    let enhance = (score) => {\n        if (score >= 5) {\n            return 4;\n        } else if (score >= 4) {\n            return 3;\n        } else if (score >= 3) {\n            return 2;\n        } else if (score >= 2) {\n            return 1;\n        } else if (score >= 1) {\n            return 0.5;\n        } else return 0;\n    };\n\n    // Goals Scored\n\n    let team1Score = Math.round(\n        attack1 - decrease(defence2) + enhance(creativity1)\n    );\n\n    let team2Score = Math.round(\n        attack2 - decrease(defence1) + enhance(creativity2)\n    );\n\n    // To update Winner in state\n\n    let winner = () => {\n        if (team1Score > team2Score) {\n            return state.teamName1;\n        } else if (team2Score > team1Score) {\n            return state.teamName2;\n        } else if (team1Score === team2Score) {\n            return \"draw\";\n        }\n    };\n\n    // Determine who is eligible for man of the match\n\n    let whoWon = () => {\n        if (team1Score > team2Score) {\n            return state.team1;\n        } else if (team2Score > team1Score) {\n            return state.team2;\n        } else if (team1Score === team2Score) {\n            return state.players;\n        }\n    };\n\n    let motm = whoWon()[Math.floor(Math.random() * whoWon.length)];\n\n    return {\n        ...state,\n        gameStarted: true,\n        team1Goals: team1Score >= 0 ? team1Score : 0,\n        team2Goals: team2Score >= 0 ? team2Score : 0,\n        winner: winner(),\n        motm: motm.name,\n    };\n};\n\nexport default createScore;\n","import initial from \"../initial\";\nimport Player from \"./createPlayer\";\nimport Squad from \"./createSquad\";\nimport Teams from \"./createTeams\";\nimport MatchInfo from \"./createMatchInfo\";\nimport Score from \"./createScore\";\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"ADD_PLAYER\":\n            return Player(state, action);\n        case \"ADD_SQUAD\":\n            return Squad(state);\n        case \"GENERATE_TEAMS\":\n            return Teams(state, action);\n        case \"MATCHDAY_INFO\":\n            return MatchInfo(state);\n        case \"GET_RESULT\":\n            return Score(state);\n        case \"RESET\":\n            return initial;\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport initialState from \"./initial\";\nimport reducer from \"./Reducer/reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"../src/data/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}